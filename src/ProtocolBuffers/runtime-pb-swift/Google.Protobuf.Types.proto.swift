// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Source file type.proto

import Foundation
import ProtocolBuffers


internal extension Google.Protobuf{}

internal func == (lhs: Google.Protobuf.Types, rhs: Google.Protobuf.Types) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasName == rhs.hasName) && (!lhs.hasName || lhs.name == rhs.name)
  fieldCheck = fieldCheck && (lhs.fields == rhs.fields)
  fieldCheck = fieldCheck && (lhs.oneofs == rhs.oneofs)
  fieldCheck = fieldCheck && (lhs.options == rhs.options)
  fieldCheck = fieldCheck && (lhs.hasSourceContext == rhs.hasSourceContext) && (!lhs.hasSourceContext || lhs.sourceContext == rhs.sourceContext)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

internal func == (lhs: Google.Protobuf.Field, rhs: Google.Protobuf.Field) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasKind == rhs.hasKind) && (!lhs.hasKind || lhs.kind == rhs.kind)
  fieldCheck = fieldCheck && (lhs.hasCardinality == rhs.hasCardinality) && (!lhs.hasCardinality || lhs.cardinality == rhs.cardinality)
  fieldCheck = fieldCheck && (lhs.hasNumber == rhs.hasNumber) && (!lhs.hasNumber || lhs.number == rhs.number)
  fieldCheck = fieldCheck && (lhs.hasName == rhs.hasName) && (!lhs.hasName || lhs.name == rhs.name)
  fieldCheck = fieldCheck && (lhs.hasTypeUrl == rhs.hasTypeUrl) && (!lhs.hasTypeUrl || lhs.typeUrl == rhs.typeUrl)
  fieldCheck = fieldCheck && (lhs.hasOneofIndex == rhs.hasOneofIndex) && (!lhs.hasOneofIndex || lhs.oneofIndex == rhs.oneofIndex)
  fieldCheck = fieldCheck && (lhs.hasPacked == rhs.hasPacked) && (!lhs.hasPacked || lhs.packed == rhs.packed)
  fieldCheck = fieldCheck && (lhs.options == rhs.options)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

internal func == (lhs: Google.Protobuf.Enum, rhs: Google.Protobuf.Enum) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasName == rhs.hasName) && (!lhs.hasName || lhs.name == rhs.name)
  fieldCheck = fieldCheck && (lhs.enumvalue == rhs.enumvalue)
  fieldCheck = fieldCheck && (lhs.options == rhs.options)
  fieldCheck = fieldCheck && (lhs.hasSourceContext == rhs.hasSourceContext) && (!lhs.hasSourceContext || lhs.sourceContext == rhs.sourceContext)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

internal func == (lhs: Google.Protobuf.EnumValue, rhs: Google.Protobuf.EnumValue) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasName == rhs.hasName) && (!lhs.hasName || lhs.name == rhs.name)
  fieldCheck = fieldCheck && (lhs.hasNumber == rhs.hasNumber) && (!lhs.hasNumber || lhs.number == rhs.number)
  fieldCheck = fieldCheck && (lhs.options == rhs.options)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

internal func == (lhs: Google.Protobuf.Option, rhs: Google.Protobuf.Option) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasName == rhs.hasName) && (!lhs.hasName || lhs.name == rhs.name)
  fieldCheck = fieldCheck && (lhs.hasValue == rhs.hasValue) && (!lhs.hasValue || lhs.value == rhs.value)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

internal extension Google.Protobuf {
  internal struct TypesRoot {
    internal static var sharedInstance : TypesRoot {
     struct Static {
         static let instance : TypesRoot = TypesRoot()
     }
     return Static.instance
    }
    internal var extensionRegistry:ExtensionRegistry

    init() {
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
      Google.Protobuf.AnyRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Google.Protobuf.SourceContextRoot.sharedInstance.registerAllExtensions(extensionRegistry)
    }
    internal func registerAllExtensions(registry:ExtensionRegistry) {
    }
  }

  final internal class Types : GeneratedMessage, GeneratedMessageProtocol, Hashable {
    private(set) var hasName:Bool = false
    private(set) var name:String = ""

    private(set) var fields:Array<Google.Protobuf.Field>  = Array<Google.Protobuf.Field>()
    private(set) var oneofs:Array<String> = Array<String>()
    private(set) var options:Array<Google.Protobuf.Option>  = Array<Google.Protobuf.Option>()
    private(set) var hasSourceContext:Bool = false
    private(set) var sourceContext:Google.Protobuf.SourceContext!
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) {
      if hasName {
        output.writeString(1, value:name)
      }
      for oneElementfields in fields {
          output.writeMessage(2, value:oneElementfields)
      }
      if !oneofs.isEmpty {
        for oneValueoneofs in oneofs {
          output.writeString(3, value:oneValueoneofs)
        }
      }
      for oneElementoptions in options {
          output.writeMessage(4, value:oneElementoptions)
      }
      if hasSourceContext {
        output.writeMessage(5, value:sourceContext)
      }
      unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasName {
        serialize_size += name.computeStringSize(1)
      }
      for oneElementfields in fields {
          serialize_size += oneElementfields.computeMessageSize(2)
      }
      var dataSizeOneofs:Int32 = 0
      for oneValueoneofs in oneofs {
          dataSizeOneofs += oneValueoneofs.computeStringSizeNoTag()
      }
      serialize_size += dataSizeOneofs
      serialize_size += 1 * Int32(oneofs.count)
      for oneElementoptions in options {
          serialize_size += oneElementoptions.computeMessageSize(4)
      }
      if hasSourceContext {
          if let varSizesourceContext = sourceContext?.computeMessageSize(5) {
              serialize_size += varSizesourceContext
          }
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseFromData(data:NSData) -> Google.Protobuf.Types {
      return Google.Protobuf.Types.builder().mergeFromData(data, extensionRegistry:Google.Protobuf.TypesRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.Types {
      return Google.Protobuf.Types.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) -> Google.Protobuf.Types {
      return Google.Protobuf.Types.builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Google.Protobuf.Types {
      return Google.Protobuf.Types.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) -> Google.Protobuf.Types {
      return Google.Protobuf.Types.builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.Types {
      return Google.Protobuf.Types.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func builder() -> Google.Protobuf.TypesBuilder {
      return Google.Protobuf.Types.classBuilder() as! Google.Protobuf.TypesBuilder
    }
    internal func builder() -> Google.Protobuf.TypesBuilder {
      return classBuilder() as! Google.Protobuf.TypesBuilder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.TypesBuilder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Types.builder()
    }
    internal func toBuilder() -> Google.Protobuf.TypesBuilder {
      return Google.Protobuf.Types.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:Google.Protobuf.Types) -> Google.Protobuf.TypesBuilder {
      return Google.Protobuf.Types.builder().mergeFrom(prototype)
    }
    override internal func writeDescriptionTo(inout output:String, indent:String) {
      if hasName {
        output += "\(indent) name: \(name) \n"
      }
      var fieldsElementIndex:Int = 0
      for oneElementfields in fields {
          output += "\(indent) fields[\(fieldsElementIndex)] {\n"
          oneElementfields.writeDescriptionTo(&output, indent:"\(indent)  ")
          output += "\(indent)}\n"
          fieldsElementIndex++
      }
      var oneofsElementIndex:Int = 0
      for oneValueoneofs in oneofs  {
          output += "\(indent) oneofs[\(oneofsElementIndex)]: \(oneValueoneofs)\n"
          oneofsElementIndex++
      }
      var optionsElementIndex:Int = 0
      for oneElementoptions in options {
          output += "\(indent) options[\(optionsElementIndex)] {\n"
          oneElementoptions.writeDescriptionTo(&output, indent:"\(indent)  ")
          output += "\(indent)}\n"
          optionsElementIndex++
      }
      if hasSourceContext {
        output += "\(indent) sourceContext {\n"
        sourceContext?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasName {
               hashCode = (hashCode &* 31) &+ name.hashValue
            }
            for oneElementfields in fields {
                hashCode = (hashCode &* 31) &+ oneElementfields.hashValue
            }
            for oneValueoneofs in oneofs {
                hashCode = (hashCode &* 31) &+ oneValueoneofs.hashValue
            }
            for oneElementoptions in options {
                hashCode = (hashCode &* 31) &+ oneElementoptions.hashValue
            }
            if hasSourceContext {
                if let hashValuesourceContext = sourceContext?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuesourceContext
                }
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "Google.Protobuf.Types"
    }
    override internal func className() -> String {
        return "Google.Protobuf.Types"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.Types.self
    }
    //Meta information declaration end

  }

  final internal class TypesBuilder : GeneratedMessageBuilder {
    private var builderResult:Google.Protobuf.Types

    required override internal init () {
       builderResult = Google.Protobuf.Types()
       super.init()
    }
    var hasName:Bool {
         get {
              return builderResult.hasName
         }
    }
    var name:String {
         get {
              return builderResult.name
         }
         set (value) {
             builderResult.hasName = true
             builderResult.name = value
         }
    }
    func setName(value:String)-> Google.Protobuf.TypesBuilder {
      self.name = value
      return self
    }
    internal func clearName() -> Google.Protobuf.TypesBuilder{
         builderResult.hasName = false
         builderResult.name = ""
         return self
    }
    var fields:Array<Google.Protobuf.Field> {
         get {
             return builderResult.fields
         }
         set (value) {
             builderResult.fields = value
         }
    }
    func setFields(value:Array<Google.Protobuf.Field>)-> Google.Protobuf.TypesBuilder {
      self.fields = value
      return self
    }
    internal func clearFields() -> Google.Protobuf.TypesBuilder {
      builderResult.fields.removeAll(keepCapacity: false)
      return self
    }
    var oneofs:Array<String> {
         get {
             return builderResult.oneofs
         }
         set (array) {
             builderResult.oneofs = array
         }
    }
    func setOneofs(value:Array<String>)-> Google.Protobuf.TypesBuilder {
      self.oneofs = value
      return self
    }
    internal func clearOneofs() -> Google.Protobuf.TypesBuilder {
       builderResult.oneofs.removeAll(keepCapacity: false)
       return self
    }
    var options:Array<Google.Protobuf.Option> {
         get {
             return builderResult.options
         }
         set (value) {
             builderResult.options = value
         }
    }
    func setOptions(value:Array<Google.Protobuf.Option>)-> Google.Protobuf.TypesBuilder {
      self.options = value
      return self
    }
    internal func clearOptions() -> Google.Protobuf.TypesBuilder {
      builderResult.options.removeAll(keepCapacity: false)
      return self
    }
    var hasSourceContext:Bool {
         get {
             return builderResult.hasSourceContext
         }
    }
    var sourceContext:Google.Protobuf.SourceContext! {
         get {
             return builderResult.sourceContext
         }
         set (value) {
             builderResult.hasSourceContext = true
             builderResult.sourceContext = value
         }
    }
    func setSourceContext(value:Google.Protobuf.SourceContext!)-> Google.Protobuf.TypesBuilder {
      self.sourceContext = value
      return self
    }
    internal func mergeSourceContext(value:Google.Protobuf.SourceContext) -> Google.Protobuf.TypesBuilder {
      if (builderResult.hasSourceContext) {
        builderResult.sourceContext = Google.Protobuf.SourceContext.builderWithPrototype(builderResult.sourceContext).mergeFrom(value).buildPartial()
      } else {
        builderResult.sourceContext = value
      }
      builderResult.hasSourceContext = true
      return self
    }
    internal func clearSourceContext() -> Google.Protobuf.TypesBuilder {
      builderResult.hasSourceContext = false
      builderResult.sourceContext = nil
      return self
    }
    override internal var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    internal override func clear() -> Google.Protobuf.TypesBuilder {
      builderResult = Google.Protobuf.Types()
      return self
    }
    internal override func clone() -> Google.Protobuf.TypesBuilder {
      return Google.Protobuf.Types.builderWithPrototype(builderResult)
    }
    internal override func build() -> Google.Protobuf.Types {
         checkInitialized()
         return buildPartial()
    }
    internal func buildPartial() -> Google.Protobuf.Types {
      var returnMe:Google.Protobuf.Types = builderResult
      return returnMe
    }
    internal func mergeFrom(other:Google.Protobuf.Types) -> Google.Protobuf.TypesBuilder {
      if (other == Google.Protobuf.Types()) {
       return self
      }
      if other.hasName {
           name = other.name
      }
      if !other.fields.isEmpty  {
         builderResult.fields += other.fields
      }
      if !other.oneofs.isEmpty {
          builderResult.oneofs += other.oneofs
      }
      if !other.options.isEmpty  {
         builderResult.options += other.options
      }
      if (other.hasSourceContext) {
          mergeSourceContext(other.sourceContext)
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream) ->Google.Protobuf.TypesBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.TypesBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        case 10 :
          name = input.readString()

        case 18 :
          var subBuilder = Google.Protobuf.Field.builder()
          input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
          fields += [subBuilder.buildPartial()]

        case 26 :
          oneofs += [input.readString()]

        case 34 :
          var subBuilder = Google.Protobuf.Option.builder()
          input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
          options += [subBuilder.buildPartial()]

        case 42 :
          var subBuilder:Google.Protobuf.SourceContextBuilder = Google.Protobuf.SourceContext.builder()
          if hasSourceContext {
            subBuilder.mergeFrom(sourceContext)
          }
          input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
          sourceContext = subBuilder.buildPartial()

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final internal class Field : GeneratedMessage, GeneratedMessageProtocol, Hashable {


      //Enum type declaration start 

      internal enum Kind:Int32 {
        case TypeUnknown = 0
        case TypeDouble = 1
        case TypeFloat = 2
        case TypeInt64 = 3
        case TypeUint64 = 4
        case TypeInt32 = 5
        case TypeFixed64 = 6
        case TypeFixed32 = 7
        case TypeBool = 8
        case TypeString = 9
        case TypeMessage = 11
        case TypeBytes = 12
        case TypeUint32 = 13
        case TypeEnum = 14
        case TypeSfixed32 = 15
        case TypeSfixed64 = 16
        case TypeSint32 = 17
        case TypeSint64 = 18

      }

      //Enum type declaration end 



      //Enum type declaration start 

      internal enum Cardinality:Int32 {
        case CardinalityUnknown = 0
        case CardinalityOptional = 1
        case CardinalityRequired = 2
        case CardinalityRepeated = 3

      }

      //Enum type declaration end 

    private(set) var kind:Field.Kind = Field.Kind.TypeUnknown
    private(set) var hasKind:Bool = false
    private(set) var cardinality:Field.Cardinality = Field.Cardinality.CardinalityUnknown
    private(set) var hasCardinality:Bool = false
    private(set) var hasNumber:Bool = false
    private(set) var number:Int32 = Int32(0)

    private(set) var hasName:Bool = false
    private(set) var name:String = ""

    private(set) var hasTypeUrl:Bool = false
    private(set) var typeUrl:String = ""

    private(set) var hasOneofIndex:Bool = false
    private(set) var oneofIndex:Int32 = Int32(0)

    private(set) var hasPacked:Bool = false
    private(set) var packed:Bool = false

    private(set) var options:Array<Google.Protobuf.Option>  = Array<Google.Protobuf.Option>()
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) {
      if hasKind {
        output.writeEnum(1, value:kind.rawValue)
      }
      if hasCardinality {
        output.writeEnum(2, value:cardinality.rawValue)
      }
      if hasNumber {
        output.writeInt32(3, value:number)
      }
      if hasName {
        output.writeString(4, value:name)
      }
      if hasTypeUrl {
        output.writeString(6, value:typeUrl)
      }
      if hasOneofIndex {
        output.writeInt32(7, value:oneofIndex)
      }
      if hasPacked {
        output.writeBool(8, value:packed)
      }
      for oneElementoptions in options {
          output.writeMessage(9, value:oneElementoptions)
      }
      unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if (hasKind) {
        serialize_size += kind.rawValue.computeEnumSize(1)
      }
      if (hasCardinality) {
        serialize_size += cardinality.rawValue.computeEnumSize(2)
      }
      if hasNumber {
        serialize_size += number.computeInt32Size(3)
      }
      if hasName {
        serialize_size += name.computeStringSize(4)
      }
      if hasTypeUrl {
        serialize_size += typeUrl.computeStringSize(6)
      }
      if hasOneofIndex {
        serialize_size += oneofIndex.computeInt32Size(7)
      }
      if hasPacked {
        serialize_size += packed.computeBoolSize(8)
      }
      for oneElementoptions in options {
          serialize_size += oneElementoptions.computeMessageSize(9)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseFromData(data:NSData) -> Google.Protobuf.Field {
      return Google.Protobuf.Field.builder().mergeFromData(data, extensionRegistry:Google.Protobuf.TypesRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.Field {
      return Google.Protobuf.Field.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) -> Google.Protobuf.Field {
      return Google.Protobuf.Field.builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Google.Protobuf.Field {
      return Google.Protobuf.Field.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) -> Google.Protobuf.Field {
      return Google.Protobuf.Field.builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.Field {
      return Google.Protobuf.Field.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func builder() -> Google.Protobuf.FieldBuilder {
      return Google.Protobuf.Field.classBuilder() as! Google.Protobuf.FieldBuilder
    }
    internal func builder() -> Google.Protobuf.FieldBuilder {
      return classBuilder() as! Google.Protobuf.FieldBuilder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.FieldBuilder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Field.builder()
    }
    internal func toBuilder() -> Google.Protobuf.FieldBuilder {
      return Google.Protobuf.Field.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:Google.Protobuf.Field) -> Google.Protobuf.FieldBuilder {
      return Google.Protobuf.Field.builder().mergeFrom(prototype)
    }
    override internal func writeDescriptionTo(inout output:String, indent:String) {
      if (hasKind) {
        output += "\(indent) kind: \(kind.rawValue)\n"
      }
      if (hasCardinality) {
        output += "\(indent) cardinality: \(cardinality.rawValue)\n"
      }
      if hasNumber {
        output += "\(indent) number: \(number) \n"
      }
      if hasName {
        output += "\(indent) name: \(name) \n"
      }
      if hasTypeUrl {
        output += "\(indent) typeUrl: \(typeUrl) \n"
      }
      if hasOneofIndex {
        output += "\(indent) oneofIndex: \(oneofIndex) \n"
      }
      if hasPacked {
        output += "\(indent) packed: \(packed) \n"
      }
      var optionsElementIndex:Int = 0
      for oneElementoptions in options {
          output += "\(indent) options[\(optionsElementIndex)] {\n"
          oneElementoptions.writeDescriptionTo(&output, indent:"\(indent)  ")
          output += "\(indent)}\n"
          optionsElementIndex++
      }
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasKind {
               hashCode = (hashCode &* 31) &+ Int(kind.rawValue)
            }
            if hasCardinality {
               hashCode = (hashCode &* 31) &+ Int(cardinality.rawValue)
            }
            if hasNumber {
               hashCode = (hashCode &* 31) &+ number.hashValue
            }
            if hasName {
               hashCode = (hashCode &* 31) &+ name.hashValue
            }
            if hasTypeUrl {
               hashCode = (hashCode &* 31) &+ typeUrl.hashValue
            }
            if hasOneofIndex {
               hashCode = (hashCode &* 31) &+ oneofIndex.hashValue
            }
            if hasPacked {
               hashCode = (hashCode &* 31) &+ packed.hashValue
            }
            for oneElementoptions in options {
                hashCode = (hashCode &* 31) &+ oneElementoptions.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "Google.Protobuf.Field"
    }
    override internal func className() -> String {
        return "Google.Protobuf.Field"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.Field.self
    }
    //Meta information declaration end

  }

  final internal class FieldBuilder : GeneratedMessageBuilder {
    private var builderResult:Google.Protobuf.Field

    required override internal init () {
       builderResult = Google.Protobuf.Field()
       super.init()
    }
      var hasKind:Bool{
          get {
              return builderResult.hasKind
          }
      }
      var kind:Field.Kind {
          get {
              return builderResult.kind
          }
          set (value) {
              builderResult.hasKind = true
              builderResult.kind = value
          }
      }
      internal func setKind(value:Field.Kind)-> Google.Protobuf.FieldBuilder {
        self.kind = value
        return self
      }
      internal func clearKind() -> Google.Protobuf.FieldBuilder {
         builderResult.hasKind = false
         builderResult.kind = .TypeUnknown
         return self
      }
      var hasCardinality:Bool{
          get {
              return builderResult.hasCardinality
          }
      }
      var cardinality:Field.Cardinality {
          get {
              return builderResult.cardinality
          }
          set (value) {
              builderResult.hasCardinality = true
              builderResult.cardinality = value
          }
      }
      internal func setCardinality(value:Field.Cardinality)-> Google.Protobuf.FieldBuilder {
        self.cardinality = value
        return self
      }
      internal func clearCardinality() -> Google.Protobuf.FieldBuilder {
         builderResult.hasCardinality = false
         builderResult.cardinality = .CardinalityUnknown
         return self
      }
    var hasNumber:Bool {
         get {
              return builderResult.hasNumber
         }
    }
    var number:Int32 {
         get {
              return builderResult.number
         }
         set (value) {
             builderResult.hasNumber = true
             builderResult.number = value
         }
    }
    func setNumber(value:Int32)-> Google.Protobuf.FieldBuilder {
      self.number = value
      return self
    }
    internal func clearNumber() -> Google.Protobuf.FieldBuilder{
         builderResult.hasNumber = false
         builderResult.number = Int32(0)
         return self
    }
    var hasName:Bool {
         get {
              return builderResult.hasName
         }
    }
    var name:String {
         get {
              return builderResult.name
         }
         set (value) {
             builderResult.hasName = true
             builderResult.name = value
         }
    }
    func setName(value:String)-> Google.Protobuf.FieldBuilder {
      self.name = value
      return self
    }
    internal func clearName() -> Google.Protobuf.FieldBuilder{
         builderResult.hasName = false
         builderResult.name = ""
         return self
    }
    var hasTypeUrl:Bool {
         get {
              return builderResult.hasTypeUrl
         }
    }
    var typeUrl:String {
         get {
              return builderResult.typeUrl
         }
         set (value) {
             builderResult.hasTypeUrl = true
             builderResult.typeUrl = value
         }
    }
    func setTypeUrl(value:String)-> Google.Protobuf.FieldBuilder {
      self.typeUrl = value
      return self
    }
    internal func clearTypeUrl() -> Google.Protobuf.FieldBuilder{
         builderResult.hasTypeUrl = false
         builderResult.typeUrl = ""
         return self
    }
    var hasOneofIndex:Bool {
         get {
              return builderResult.hasOneofIndex
         }
    }
    var oneofIndex:Int32 {
         get {
              return builderResult.oneofIndex
         }
         set (value) {
             builderResult.hasOneofIndex = true
             builderResult.oneofIndex = value
         }
    }
    func setOneofIndex(value:Int32)-> Google.Protobuf.FieldBuilder {
      self.oneofIndex = value
      return self
    }
    internal func clearOneofIndex() -> Google.Protobuf.FieldBuilder{
         builderResult.hasOneofIndex = false
         builderResult.oneofIndex = Int32(0)
         return self
    }
    var hasPacked:Bool {
         get {
              return builderResult.hasPacked
         }
    }
    var packed:Bool {
         get {
              return builderResult.packed
         }
         set (value) {
             builderResult.hasPacked = true
             builderResult.packed = value
         }
    }
    func setPacked(value:Bool)-> Google.Protobuf.FieldBuilder {
      self.packed = value
      return self
    }
    internal func clearPacked() -> Google.Protobuf.FieldBuilder{
         builderResult.hasPacked = false
         builderResult.packed = false
         return self
    }
    var options:Array<Google.Protobuf.Option> {
         get {
             return builderResult.options
         }
         set (value) {
             builderResult.options = value
         }
    }
    func setOptions(value:Array<Google.Protobuf.Option>)-> Google.Protobuf.FieldBuilder {
      self.options = value
      return self
    }
    internal func clearOptions() -> Google.Protobuf.FieldBuilder {
      builderResult.options.removeAll(keepCapacity: false)
      return self
    }
    override internal var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    internal override func clear() -> Google.Protobuf.FieldBuilder {
      builderResult = Google.Protobuf.Field()
      return self
    }
    internal override func clone() -> Google.Protobuf.FieldBuilder {
      return Google.Protobuf.Field.builderWithPrototype(builderResult)
    }
    internal override func build() -> Google.Protobuf.Field {
         checkInitialized()
         return buildPartial()
    }
    internal func buildPartial() -> Google.Protobuf.Field {
      var returnMe:Google.Protobuf.Field = builderResult
      return returnMe
    }
    internal func mergeFrom(other:Google.Protobuf.Field) -> Google.Protobuf.FieldBuilder {
      if (other == Google.Protobuf.Field()) {
       return self
      }
      if other.hasKind {
           kind = other.kind
      }
      if other.hasCardinality {
           cardinality = other.cardinality
      }
      if other.hasNumber {
           number = other.number
      }
      if other.hasName {
           name = other.name
      }
      if other.hasTypeUrl {
           typeUrl = other.typeUrl
      }
      if other.hasOneofIndex {
           oneofIndex = other.oneofIndex
      }
      if other.hasPacked {
           packed = other.packed
      }
      if !other.options.isEmpty  {
         builderResult.options += other.options
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream) ->Google.Protobuf.FieldBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.FieldBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        case 8 :
          let valueIntkind = input.readEnum()
          if let enumskind = Field.Kind(rawValue:valueIntkind){
               kind = enumskind
          } else {
               unknownFieldsBuilder.mergeVarintField(1, value:Int64(valueIntkind))
          }

        case 16 :
          let valueIntcardinality = input.readEnum()
          if let enumscardinality = Field.Cardinality(rawValue:valueIntcardinality){
               cardinality = enumscardinality
          } else {
               unknownFieldsBuilder.mergeVarintField(2, value:Int64(valueIntcardinality))
          }

        case 24 :
          number = input.readInt32()

        case 34 :
          name = input.readString()

        case 50 :
          typeUrl = input.readString()

        case 56 :
          oneofIndex = input.readInt32()

        case 64 :
          packed = input.readBool()

        case 74 :
          var subBuilder = Google.Protobuf.Option.builder()
          input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
          options += [subBuilder.buildPartial()]

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final internal class Enum : GeneratedMessage, GeneratedMessageProtocol, Hashable {
    private(set) var hasName:Bool = false
    private(set) var name:String = ""

    private(set) var enumvalue:Array<Google.Protobuf.EnumValue>  = Array<Google.Protobuf.EnumValue>()
    private(set) var options:Array<Google.Protobuf.Option>  = Array<Google.Protobuf.Option>()
    private(set) var hasSourceContext:Bool = false
    private(set) var sourceContext:Google.Protobuf.SourceContext!
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) {
      if hasName {
        output.writeString(1, value:name)
      }
      for oneElementenumvalue in enumvalue {
          output.writeMessage(2, value:oneElementenumvalue)
      }
      for oneElementoptions in options {
          output.writeMessage(3, value:oneElementoptions)
      }
      if hasSourceContext {
        output.writeMessage(4, value:sourceContext)
      }
      unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasName {
        serialize_size += name.computeStringSize(1)
      }
      for oneElementenumvalue in enumvalue {
          serialize_size += oneElementenumvalue.computeMessageSize(2)
      }
      for oneElementoptions in options {
          serialize_size += oneElementoptions.computeMessageSize(3)
      }
      if hasSourceContext {
          if let varSizesourceContext = sourceContext?.computeMessageSize(4) {
              serialize_size += varSizesourceContext
          }
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseFromData(data:NSData) -> Google.Protobuf.Enum {
      return Google.Protobuf.Enum.builder().mergeFromData(data, extensionRegistry:Google.Protobuf.TypesRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.Enum {
      return Google.Protobuf.Enum.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) -> Google.Protobuf.Enum {
      return Google.Protobuf.Enum.builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Google.Protobuf.Enum {
      return Google.Protobuf.Enum.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) -> Google.Protobuf.Enum {
      return Google.Protobuf.Enum.builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.Enum {
      return Google.Protobuf.Enum.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func builder() -> Google.Protobuf.EnumBuilder {
      return Google.Protobuf.Enum.classBuilder() as! Google.Protobuf.EnumBuilder
    }
    internal func builder() -> Google.Protobuf.EnumBuilder {
      return classBuilder() as! Google.Protobuf.EnumBuilder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.EnumBuilder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Enum.builder()
    }
    internal func toBuilder() -> Google.Protobuf.EnumBuilder {
      return Google.Protobuf.Enum.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:Google.Protobuf.Enum) -> Google.Protobuf.EnumBuilder {
      return Google.Protobuf.Enum.builder().mergeFrom(prototype)
    }
    override internal func writeDescriptionTo(inout output:String, indent:String) {
      if hasName {
        output += "\(indent) name: \(name) \n"
      }
      var enumvalueElementIndex:Int = 0
      for oneElementenumvalue in enumvalue {
          output += "\(indent) enumvalue[\(enumvalueElementIndex)] {\n"
          oneElementenumvalue.writeDescriptionTo(&output, indent:"\(indent)  ")
          output += "\(indent)}\n"
          enumvalueElementIndex++
      }
      var optionsElementIndex:Int = 0
      for oneElementoptions in options {
          output += "\(indent) options[\(optionsElementIndex)] {\n"
          oneElementoptions.writeDescriptionTo(&output, indent:"\(indent)  ")
          output += "\(indent)}\n"
          optionsElementIndex++
      }
      if hasSourceContext {
        output += "\(indent) sourceContext {\n"
        sourceContext?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasName {
               hashCode = (hashCode &* 31) &+ name.hashValue
            }
            for oneElementenumvalue in enumvalue {
                hashCode = (hashCode &* 31) &+ oneElementenumvalue.hashValue
            }
            for oneElementoptions in options {
                hashCode = (hashCode &* 31) &+ oneElementoptions.hashValue
            }
            if hasSourceContext {
                if let hashValuesourceContext = sourceContext?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuesourceContext
                }
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "Google.Protobuf.Enum"
    }
    override internal func className() -> String {
        return "Google.Protobuf.Enum"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.Enum.self
    }
    //Meta information declaration end

  }

  final internal class EnumBuilder : GeneratedMessageBuilder {
    private var builderResult:Google.Protobuf.Enum

    required override internal init () {
       builderResult = Google.Protobuf.Enum()
       super.init()
    }
    var hasName:Bool {
         get {
              return builderResult.hasName
         }
    }
    var name:String {
         get {
              return builderResult.name
         }
         set (value) {
             builderResult.hasName = true
             builderResult.name = value
         }
    }
    func setName(value:String)-> Google.Protobuf.EnumBuilder {
      self.name = value
      return self
    }
    internal func clearName() -> Google.Protobuf.EnumBuilder{
         builderResult.hasName = false
         builderResult.name = ""
         return self
    }
    var enumvalue:Array<Google.Protobuf.EnumValue> {
         get {
             return builderResult.enumvalue
         }
         set (value) {
             builderResult.enumvalue = value
         }
    }
    func setEnumvalue(value:Array<Google.Protobuf.EnumValue>)-> Google.Protobuf.EnumBuilder {
      self.enumvalue = value
      return self
    }
    internal func clearEnumvalue() -> Google.Protobuf.EnumBuilder {
      builderResult.enumvalue.removeAll(keepCapacity: false)
      return self
    }
    var options:Array<Google.Protobuf.Option> {
         get {
             return builderResult.options
         }
         set (value) {
             builderResult.options = value
         }
    }
    func setOptions(value:Array<Google.Protobuf.Option>)-> Google.Protobuf.EnumBuilder {
      self.options = value
      return self
    }
    internal func clearOptions() -> Google.Protobuf.EnumBuilder {
      builderResult.options.removeAll(keepCapacity: false)
      return self
    }
    var hasSourceContext:Bool {
         get {
             return builderResult.hasSourceContext
         }
    }
    var sourceContext:Google.Protobuf.SourceContext! {
         get {
             return builderResult.sourceContext
         }
         set (value) {
             builderResult.hasSourceContext = true
             builderResult.sourceContext = value
         }
    }
    func setSourceContext(value:Google.Protobuf.SourceContext!)-> Google.Protobuf.EnumBuilder {
      self.sourceContext = value
      return self
    }
    internal func mergeSourceContext(value:Google.Protobuf.SourceContext) -> Google.Protobuf.EnumBuilder {
      if (builderResult.hasSourceContext) {
        builderResult.sourceContext = Google.Protobuf.SourceContext.builderWithPrototype(builderResult.sourceContext).mergeFrom(value).buildPartial()
      } else {
        builderResult.sourceContext = value
      }
      builderResult.hasSourceContext = true
      return self
    }
    internal func clearSourceContext() -> Google.Protobuf.EnumBuilder {
      builderResult.hasSourceContext = false
      builderResult.sourceContext = nil
      return self
    }
    override internal var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    internal override func clear() -> Google.Protobuf.EnumBuilder {
      builderResult = Google.Protobuf.Enum()
      return self
    }
    internal override func clone() -> Google.Protobuf.EnumBuilder {
      return Google.Protobuf.Enum.builderWithPrototype(builderResult)
    }
    internal override func build() -> Google.Protobuf.Enum {
         checkInitialized()
         return buildPartial()
    }
    internal func buildPartial() -> Google.Protobuf.Enum {
      var returnMe:Google.Protobuf.Enum = builderResult
      return returnMe
    }
    internal func mergeFrom(other:Google.Protobuf.Enum) -> Google.Protobuf.EnumBuilder {
      if (other == Google.Protobuf.Enum()) {
       return self
      }
      if other.hasName {
           name = other.name
      }
      if !other.enumvalue.isEmpty  {
         builderResult.enumvalue += other.enumvalue
      }
      if !other.options.isEmpty  {
         builderResult.options += other.options
      }
      if (other.hasSourceContext) {
          mergeSourceContext(other.sourceContext)
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream) ->Google.Protobuf.EnumBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.EnumBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        case 10 :
          name = input.readString()

        case 18 :
          var subBuilder = Google.Protobuf.EnumValue.builder()
          input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
          enumvalue += [subBuilder.buildPartial()]

        case 26 :
          var subBuilder = Google.Protobuf.Option.builder()
          input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
          options += [subBuilder.buildPartial()]

        case 34 :
          var subBuilder:Google.Protobuf.SourceContextBuilder = Google.Protobuf.SourceContext.builder()
          if hasSourceContext {
            subBuilder.mergeFrom(sourceContext)
          }
          input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
          sourceContext = subBuilder.buildPartial()

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final internal class EnumValue : GeneratedMessage, GeneratedMessageProtocol, Hashable {
    private(set) var hasName:Bool = false
    private(set) var name:String = ""

    private(set) var hasNumber:Bool = false
    private(set) var number:Int32 = Int32(0)

    private(set) var options:Array<Google.Protobuf.Option>  = Array<Google.Protobuf.Option>()
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) {
      if hasName {
        output.writeString(1, value:name)
      }
      if hasNumber {
        output.writeInt32(2, value:number)
      }
      for oneElementoptions in options {
          output.writeMessage(3, value:oneElementoptions)
      }
      unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasName {
        serialize_size += name.computeStringSize(1)
      }
      if hasNumber {
        serialize_size += number.computeInt32Size(2)
      }
      for oneElementoptions in options {
          serialize_size += oneElementoptions.computeMessageSize(3)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseFromData(data:NSData) -> Google.Protobuf.EnumValue {
      return Google.Protobuf.EnumValue.builder().mergeFromData(data, extensionRegistry:Google.Protobuf.TypesRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.EnumValue {
      return Google.Protobuf.EnumValue.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) -> Google.Protobuf.EnumValue {
      return Google.Protobuf.EnumValue.builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Google.Protobuf.EnumValue {
      return Google.Protobuf.EnumValue.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) -> Google.Protobuf.EnumValue {
      return Google.Protobuf.EnumValue.builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.EnumValue {
      return Google.Protobuf.EnumValue.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func builder() -> Google.Protobuf.EnumValueBuilder {
      return Google.Protobuf.EnumValue.classBuilder() as! Google.Protobuf.EnumValueBuilder
    }
    internal func builder() -> Google.Protobuf.EnumValueBuilder {
      return classBuilder() as! Google.Protobuf.EnumValueBuilder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.EnumValueBuilder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return Google.Protobuf.EnumValue.builder()
    }
    internal func toBuilder() -> Google.Protobuf.EnumValueBuilder {
      return Google.Protobuf.EnumValue.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:Google.Protobuf.EnumValue) -> Google.Protobuf.EnumValueBuilder {
      return Google.Protobuf.EnumValue.builder().mergeFrom(prototype)
    }
    override internal func writeDescriptionTo(inout output:String, indent:String) {
      if hasName {
        output += "\(indent) name: \(name) \n"
      }
      if hasNumber {
        output += "\(indent) number: \(number) \n"
      }
      var optionsElementIndex:Int = 0
      for oneElementoptions in options {
          output += "\(indent) options[\(optionsElementIndex)] {\n"
          oneElementoptions.writeDescriptionTo(&output, indent:"\(indent)  ")
          output += "\(indent)}\n"
          optionsElementIndex++
      }
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasName {
               hashCode = (hashCode &* 31) &+ name.hashValue
            }
            if hasNumber {
               hashCode = (hashCode &* 31) &+ number.hashValue
            }
            for oneElementoptions in options {
                hashCode = (hashCode &* 31) &+ oneElementoptions.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "Google.Protobuf.EnumValue"
    }
    override internal func className() -> String {
        return "Google.Protobuf.EnumValue"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.EnumValue.self
    }
    //Meta information declaration end

  }

  final internal class EnumValueBuilder : GeneratedMessageBuilder {
    private var builderResult:Google.Protobuf.EnumValue

    required override internal init () {
       builderResult = Google.Protobuf.EnumValue()
       super.init()
    }
    var hasName:Bool {
         get {
              return builderResult.hasName
         }
    }
    var name:String {
         get {
              return builderResult.name
         }
         set (value) {
             builderResult.hasName = true
             builderResult.name = value
         }
    }
    func setName(value:String)-> Google.Protobuf.EnumValueBuilder {
      self.name = value
      return self
    }
    internal func clearName() -> Google.Protobuf.EnumValueBuilder{
         builderResult.hasName = false
         builderResult.name = ""
         return self
    }
    var hasNumber:Bool {
         get {
              return builderResult.hasNumber
         }
    }
    var number:Int32 {
         get {
              return builderResult.number
         }
         set (value) {
             builderResult.hasNumber = true
             builderResult.number = value
         }
    }
    func setNumber(value:Int32)-> Google.Protobuf.EnumValueBuilder {
      self.number = value
      return self
    }
    internal func clearNumber() -> Google.Protobuf.EnumValueBuilder{
         builderResult.hasNumber = false
         builderResult.number = Int32(0)
         return self
    }
    var options:Array<Google.Protobuf.Option> {
         get {
             return builderResult.options
         }
         set (value) {
             builderResult.options = value
         }
    }
    func setOptions(value:Array<Google.Protobuf.Option>)-> Google.Protobuf.EnumValueBuilder {
      self.options = value
      return self
    }
    internal func clearOptions() -> Google.Protobuf.EnumValueBuilder {
      builderResult.options.removeAll(keepCapacity: false)
      return self
    }
    override internal var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    internal override func clear() -> Google.Protobuf.EnumValueBuilder {
      builderResult = Google.Protobuf.EnumValue()
      return self
    }
    internal override func clone() -> Google.Protobuf.EnumValueBuilder {
      return Google.Protobuf.EnumValue.builderWithPrototype(builderResult)
    }
    internal override func build() -> Google.Protobuf.EnumValue {
         checkInitialized()
         return buildPartial()
    }
    internal func buildPartial() -> Google.Protobuf.EnumValue {
      var returnMe:Google.Protobuf.EnumValue = builderResult
      return returnMe
    }
    internal func mergeFrom(other:Google.Protobuf.EnumValue) -> Google.Protobuf.EnumValueBuilder {
      if (other == Google.Protobuf.EnumValue()) {
       return self
      }
      if other.hasName {
           name = other.name
      }
      if other.hasNumber {
           number = other.number
      }
      if !other.options.isEmpty  {
         builderResult.options += other.options
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream) ->Google.Protobuf.EnumValueBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.EnumValueBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        case 10 :
          name = input.readString()

        case 16 :
          number = input.readInt32()

        case 26 :
          var subBuilder = Google.Protobuf.Option.builder()
          input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
          options += [subBuilder.buildPartial()]

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final internal class Option : GeneratedMessage, GeneratedMessageProtocol, Hashable {
    private(set) var hasName:Bool = false
    private(set) var name:String = ""

    private(set) var hasValue:Bool = false
    private(set) var value:Google.Protobuf.Any!
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) {
      if hasName {
        output.writeString(1, value:name)
      }
      if hasValue {
        output.writeMessage(2, value:value)
      }
      unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasName {
        serialize_size += name.computeStringSize(1)
      }
      if hasValue {
          if let varSizevalue = value?.computeMessageSize(2) {
              serialize_size += varSizevalue
          }
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseFromData(data:NSData) -> Google.Protobuf.Option {
      return Google.Protobuf.Option.builder().mergeFromData(data, extensionRegistry:Google.Protobuf.TypesRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.Option {
      return Google.Protobuf.Option.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) -> Google.Protobuf.Option {
      return Google.Protobuf.Option.builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Google.Protobuf.Option {
      return Google.Protobuf.Option.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) -> Google.Protobuf.Option {
      return Google.Protobuf.Option.builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.Option {
      return Google.Protobuf.Option.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func builder() -> Google.Protobuf.OptionBuilder {
      return Google.Protobuf.Option.classBuilder() as! Google.Protobuf.OptionBuilder
    }
    internal func builder() -> Google.Protobuf.OptionBuilder {
      return classBuilder() as! Google.Protobuf.OptionBuilder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.OptionBuilder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Option.builder()
    }
    internal func toBuilder() -> Google.Protobuf.OptionBuilder {
      return Google.Protobuf.Option.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:Google.Protobuf.Option) -> Google.Protobuf.OptionBuilder {
      return Google.Protobuf.Option.builder().mergeFrom(prototype)
    }
    override internal func writeDescriptionTo(inout output:String, indent:String) {
      if hasName {
        output += "\(indent) name: \(name) \n"
      }
      if hasValue {
        output += "\(indent) value {\n"
        value?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasName {
               hashCode = (hashCode &* 31) &+ name.hashValue
            }
            if hasValue {
                if let hashValuevalue = value?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuevalue
                }
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "Google.Protobuf.Option"
    }
    override internal func className() -> String {
        return "Google.Protobuf.Option"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.Option.self
    }
    //Meta information declaration end

  }

  final internal class OptionBuilder : GeneratedMessageBuilder {
    private var builderResult:Google.Protobuf.Option

    required override internal init () {
       builderResult = Google.Protobuf.Option()
       super.init()
    }
    var hasName:Bool {
         get {
              return builderResult.hasName
         }
    }
    var name:String {
         get {
              return builderResult.name
         }
         set (value) {
             builderResult.hasName = true
             builderResult.name = value
         }
    }
    func setName(value:String)-> Google.Protobuf.OptionBuilder {
      self.name = value
      return self
    }
    internal func clearName() -> Google.Protobuf.OptionBuilder{
         builderResult.hasName = false
         builderResult.name = ""
         return self
    }
    var hasValue:Bool {
         get {
             return builderResult.hasValue
         }
    }
    var value:Google.Protobuf.Any! {
         get {
             return builderResult.value
         }
         set (value) {
             builderResult.hasValue = true
             builderResult.value = value
         }
    }
    func setValue(value:Google.Protobuf.Any!)-> Google.Protobuf.OptionBuilder {
      self.value = value
      return self
    }
    internal func mergeValue(value:Google.Protobuf.Any) -> Google.Protobuf.OptionBuilder {
      if (builderResult.hasValue) {
        builderResult.value = Google.Protobuf.Any.builderWithPrototype(builderResult.value).mergeFrom(value).buildPartial()
      } else {
        builderResult.value = value
      }
      builderResult.hasValue = true
      return self
    }
    internal func clearValue() -> Google.Protobuf.OptionBuilder {
      builderResult.hasValue = false
      builderResult.value = nil
      return self
    }
    override internal var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    internal override func clear() -> Google.Protobuf.OptionBuilder {
      builderResult = Google.Protobuf.Option()
      return self
    }
    internal override func clone() -> Google.Protobuf.OptionBuilder {
      return Google.Protobuf.Option.builderWithPrototype(builderResult)
    }
    internal override func build() -> Google.Protobuf.Option {
         checkInitialized()
         return buildPartial()
    }
    internal func buildPartial() -> Google.Protobuf.Option {
      var returnMe:Google.Protobuf.Option = builderResult
      return returnMe
    }
    internal func mergeFrom(other:Google.Protobuf.Option) -> Google.Protobuf.OptionBuilder {
      if (other == Google.Protobuf.Option()) {
       return self
      }
      if other.hasName {
           name = other.name
      }
      if (other.hasValue) {
          mergeValue(other.value)
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream) ->Google.Protobuf.OptionBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Google.Protobuf.OptionBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        case 10 :
          name = input.readString()

        case 18 :
          var subBuilder:Google.Protobuf.AnyBuilder = Google.Protobuf.Any.builder()
          if hasValue {
            subBuilder.mergeFrom(value)
          }
          input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
          value = subBuilder.buildPartial()

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

}

// @@protoc_insertion_point(global_scope)
